{
  "swagger": "2.0",
  "info": {
    "title": "Smart Pantry",
    "description": "An API for tracking food and supply inventory",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "securityDefinitions": {
    "oauth": {
      "type": "oauth2",
      "authorizationUrl": "loginauth",
      "flow": "authorizationCode"
    }
  },
  "paths": {
    "/food/": {
      "get": {
        "tags": ["food"],
        "summary": "Get all food items",
        "description": "Returns a list of all food items",
        "parameters": [],
        "operationId": "getFood",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["food"],
        "summary": "Add a food item!",
        "description": "Add a food item to your inventory!",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cat": {
                  "example": "Fruit"
                },
                "itemName": {
                  "example": "Grapes"
                },
                "stock": {
                  "type": "int",
                  "example": 0
                },
                "inCart": {
                  "type": "bool",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item Added!"
          }
        }
      }
    },
    "/food/inCart/{inCart}": {
      "get": {
        "tags": ["food"],
        "summary": "Get food item by cart status",
        "description": "Returns food item by cart status",
        "produces": ["application/json"],
        "operationId": "getFoodByCartStatus",
        "parameters": [
          {
            "name": "inCart",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/food/cat/{cat}": {
      "get": {
        "tags": ["food"],
        "summary": "Get food item by category",
        "description": "Returns food item by category",
        "produces": ["application/json"],
        "operationId": "getFoodByCategory",
        "parameters": [
          {
            "name": "cat",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/food/itemName/{itemName}": {
      "get": {
        "tags": ["food"],
        "summary": "Get food item by name",
        "description": "Returns food item by name",
        "produces": ["application/json"],
        "operationId": "getFoodByName",
        "parameters": [
          {
            "name": "itemName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/food/{id}": {
      "put": {
        "tags": ["food"],
        "summary": "Update food item",
        "description": "Modify food",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cat": {
                  "example": "Fruit"
                },
                "itemName": {
                  "example": "Grapes"
                },
                "stock": {
                  "type": "int",
                  "example": 0
                },
                "inCart": {
                  "type": "bool",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": ["food"],
        "summary": "Delete food item",
        "description": "Delete a Food Item!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted!"
          }
        }
      }
    },

    "/supplies/": {
      "get": {
        "tags": ["supplies"],
        "summary": "Get all supply items",
        "description": "Returns a list of all supply items",
        "operationId": "getSupplies",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["supplies"],
        "summary": "Add a non-food item",
        "description": "Add a non-food item to your inventory!",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemName": {
                  "example": "Toilet Paper"
                },
                "stock": {
                  "type": "int",
                  "example": 3
                },
                "inCart": {
                  "type": "bool",
                  "example": false
                },
                "color": {
                  "example": "n/a"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item Added!"
          }
        }
      }
    },
    "/supplies/inCart/{inCart}": {
      "get": {
        "tags": ["supplies"],
        "summary": "Get supply item by category",
        "description": "Returns supply item by category",
        "produces": ["application/json"],
        "operationId": "getSuppliesByCategory",
        "parameters": [
          {
            "name": "inCart",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/supplies/color/{color}": {
      "get": {
        "tags": ["supplies"],
        "summary": "Get supply item by color",
        "description": "Returns supply item by color",
        "produces": ["application/json"],
        "operationId": "getSuppliesByColor",
        "parameters": [
          {
            "name": "color",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/supplies/itemName/{itemName}": {
      "get": {
        "tags": ["supplies"],
        "summary": "Get supply item by name",
        "description": "Returns supply item by name",
        "parameters": [
          {
            "name": "itemName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/supplies/{id}": {
      "put": {
        "tags": ["supplies"],
        "summary": "Update a non-food item!",
        "description": "Modify supply",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemName": {
                  "example": "Toilet Paper"
                },
                "stock": {
                  "type": "int",
                  "example": 3
                },
                "inCart": {
                  "type": "bool",
                  "example": false
                },
                "color": {
                  "example": "n/a"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supply Item Updated!"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": ["supplies"],
        "summary": "Delete a non-food item",
        "description": "Delete an Item!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted!"
          }
        }
      }
    },

    "/ordered/": {
      "get": {
        "tags": ["ordered"],
        "summary": "Get all ordered items",
        "description": "Returns a list of all ordered items",
        "operationId": "getOrdered",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["ordered"],
        "summary": "Add an Order!",
        "description": "Add an Order!",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemName": {
                  "example": "socks"
                },
                "quantityOrdered": {
                  "type": "int",
                  "example": "1"
                },
                "color": {
                  "example": "pink/grey"
                },
                "dateOrdered": {
                  "example": "10/12/22"
                },
                "eta": {
                  "example": "10/14/22"
                },
                "price": {
                  "type": "int",
                  "example": 20
                },
                "gift": {
                  "type": "bool",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item Added!"
          }
        }
      }
    },
    "/ordered/dateOrdered/{dateOrdered}": {
      "get": {
        "tags": ["ordered"],
        "summary": "Get ordered item by date",
        "description": "Returns ordered item by date",
        "produces": ["application/json"],
        "operationId": "getOrderedByDate",
        "parameters": [
          {
            "name": "dateOrdered",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ordered/eta/{eta}": {
      "get": {
        "tags": ["ordered"],
        "summary": "Get ordered item by eta",
        "description": "Returns ordered item by eta",
        "produces": ["application/json"],
        "operationId": "getOrderedByEta",
        "parameters": [
          {
            "name": "eta",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ordered/{id}": {
      "get": {
        "tags": ["ordered"],
        "summary": "Get ordered item by id",
        "description": "Returns ordered item by id",
        "produces": ["application/json"],
        "operationId": "getOrderedById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["ordered"],
        "summary": "Update an Order!",
        "description": "Modify order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemName": {
                  "example": "socks"
                },
                "quantityOrdered": {
                  "type": "int",
                  "example": "1"
                },
                "color": {
                  "example": "pink/grey"
                },
                "dateOrdered": {
                  "example": "10/12/22"
                },
                "eta": {
                  "example": "10/14/22"
                },
                "price": {
                  "type": "int",
                  "example": 20
                },
                "gift": {
                  "type": "bool",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order Id Updated"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": ["ordered"],
        "summary": "Delete an Order!",
        "description": "Delete an Order!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted!"
          }
        }
      }
    },

    "/users/": {
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "description": "Returns a list of all users",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Add a food item!",
        "description": "Add a food item to your inventory!",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "myusername1"
                },
                "itemName": {
                  "example": "myemail@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item Added!"
          }
        }
      }
    },
    "/users/username/{username}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user by username",
        "description": "Returns user by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user by id",
        "description": "Returns user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Add a food item!",
        "description": "Add a food item to your inventory!",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "myusername1"
                },
                "itemName": {
                  "example": "myemail@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supply Item Updated!"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete a User!",
        "description": "Delete a user!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}
